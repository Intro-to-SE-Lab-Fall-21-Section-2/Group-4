workflows:
  version: 2
  build-deploy:
    jobs:
      - test

version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          FLASK_CONFIG: testing
          TEST_DATABASE_URL: postgresql://ubuntu@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.5-alpine-ram
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - run: pip3 freeze > requirements.txt
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install flask
            pip3 install flask_bootstrap
            pip3 install flask_wtf 
            pip3 install wtforms 
            pip3 install gcloud
            pip3 install imap_tools 
            pip3 install pytest
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            mkdir test-results
            python3 -m pytest test.py
      - store_artifacts:
          path: test-results
      - store_test_results:
          path: test-results