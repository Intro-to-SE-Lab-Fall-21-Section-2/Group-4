version: 2.1

#########
# Common
#########
orbs:
  heroku: circleci/heroku@1.0.1

############
# Workflows
############
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master

##################
# Job Definitions
##################
jobs:
  build:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
        environment:
          FLASK_CONFIG: testing
          TEST_DATABASE_URL: postgresql://ubuntu@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ''
    steps:
      - checkout
      - run: mkdir test-reports
      - run: pip3 freeze > requirements.txt
      - run:
          name: Download Selenium
          command: |
            curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run:
          name: Start Selenium
          command: |
            java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
          background: true
      - restore_cache:
          key: deps2-{{ checksum "requirements.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install flask
            pip3 install flask_bootstrap
            pip3 install flask_wtf 
            pip3 install wtforms 
            pip3 install gcloud
            pip3 install imap_tools
            pip3 install pytest
            pip install -r requirements.txt
            pip install -r _pytest.junitxml
      - save_cache:
          key: deps2-{{ checksum "requirements.txt" }}
          paths:
            - 'venv'
      - run:
          command: |
            . venv/bin/activate
            pytest test.py
      - store_artifacts:
          path: test-reports/
          destination: tr1
      - store_test_results:
          path: test-reports/

  deploy:
    executor: heroku/default
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - '48:a0:87:54:ca:75:32:12:c6:9e:a2:77:a4:7a:08:a4'
      - heroku/install
      - heroku/deploy-via-git:
          force: true